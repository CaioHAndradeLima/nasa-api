name: Build and Push Node.js Image to AWS ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get version from VERSION file
        id: get-version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
          else
            echo "VERSION file not found. Exiting..."
            exit 1
          fi
          echo "Current version: $VERSION"
          echo ::set-output name=version::$VERSION

      - name: Build Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }} .
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: nasa

      - name: Tag Docker image with semantic version
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }}
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: nasa

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }}
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: nasa

      - name: Fill in ECS Task Definition JSON
        id: task-def
        run: |
          VERSION=${{ steps.get-version.outputs.version }}
          sed "s|<version>|$VERSION|g; s|<ECR_REGISTRY>|$ECR_REGISTRY|g" .github/workflows/nasa-task.json > filled-task-def.json
          cat filled-task-def.json

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: nasa-cluster
          service: nasa-service
          task-definition: filled-task-def.json

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: nasa-cluster
          service: nasa-service
          task-definition: ${{ steps.register-task.outputs.task-definition-arn }}
